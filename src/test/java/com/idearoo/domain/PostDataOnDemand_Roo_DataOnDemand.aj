// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.idearoo.domain;

import com.idearoo.domain.Post;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect PostDataOnDemand_Roo_DataOnDemand {
    
    declare @type: PostDataOnDemand: @Component;
    
    private Random PostDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Post> PostDataOnDemand.data;
    
    public Post PostDataOnDemand.getNewTransientPost(int index) {
        com.idearoo.domain.Post obj = new com.idearoo.domain.Post();
        java.lang.String entry = "entry_" + index;
        if (entry.length() > 1000) {
            entry  = entry.substring(0, 1000);
        }
        obj.setEntry(entry);
        obj.setPostDate(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        return obj;
    }
    
    public Post PostDataOnDemand.getSpecificPost(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Post obj = data.get(index);
        return Post.findPost(obj.getId());
    }
    
    public Post PostDataOnDemand.getRandomPost() {
        init();
        Post obj = data.get(rnd.nextInt(data.size()));
        return Post.findPost(obj.getId());
    }
    
    public boolean PostDataOnDemand.modifyPost(Post obj) {
        return false;
    }
    
    public void PostDataOnDemand.init() {
        data = com.idearoo.domain.Post.findPostEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Post' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.idearoo.domain.Post>();
        for (int i = 0; i < 10; i++) {
            com.idearoo.domain.Post obj = getNewTransientPost(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
